---
kind: ScalarType
version: v1
definition:
  name: Varchar
  graphql:
    typeName: Varchar

---
kind: BooleanExpressionType
version: v1
definition:
  name: VarcharBoolExp
  operand:
    scalar:
      type: Varchar
      comparisonOperators:
        - name: _eq
          argumentType: Varchar!
        - name: _gt
          argumentType: Varchar!
        - name: _gte
          argumentType: Varchar!
        - name: _ilike
          argumentType: Varchar!
        - name: _in
          argumentType: Varchar!
        - name: _iregex
          argumentType: Varchar!
        - name: _like
          argumentType: Varchar!
        - name: _lt
          argumentType: Varchar!
        - name: _lte
          argumentType: Varchar!
        - name: _neq
          argumentType: Varchar!
        - name: _nilike
          argumentType: Varchar!
        - name: _niregex
          argumentType: Varchar!
        - name: _nlike
          argumentType: Varchar!
        - name: _nregex
          argumentType: Varchar!
        - name: _regex
          argumentType: Varchar!
        - name: starts_with
          argumentType: Varchar!
        - name: ts_match_tt
          argumentType: Varchar!
      dataConnectorOperatorMapping:
        - dataConnectorName: my_datastore
          dataConnectorScalarType: varchar
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: VarcharBoolExp

---
kind: ScalarType
version: v1
definition:
  name: Text_1
  graphql:
    typeName: Text1

---
kind: BooleanExpressionType
version: v1
definition:
  name: TextBoolExp_1
  operand:
    scalar:
      type: Text_1
      comparisonOperators:
        - name: _eq
          argumentType: Text_1!
        - name: _gt
          argumentType: Text_1!
        - name: _gte
          argumentType: Text_1!
        - name: _ilike
          argumentType: Text_1!
        - name: _in
          argumentType: Text_1!
        - name: _iregex
          argumentType: Text_1!
        - name: _like
          argumentType: Text_1!
        - name: _lt
          argumentType: Text_1!
        - name: _lte
          argumentType: Text_1!
        - name: _neq
          argumentType: Text_1!
        - name: _nilike
          argumentType: Text_1!
        - name: _niregex
          argumentType: Text_1!
        - name: _nlike
          argumentType: Text_1!
        - name: _nregex
          argumentType: Text_1!
        - name: _regex
          argumentType: Text_1!
        - name: starts_with
          argumentType: Text_1!
        - name: ts_match_tt
          argumentType: Text_1!
      dataConnectorOperatorMapping:
        - dataConnectorName: my_datastore
          dataConnectorScalarType: text
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TextBoolExp1

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: my_datastore
  dataConnectorScalarType: text
  representation: Text_1
  graphql:
    comparisonExpressionTypeName: Text1ComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: VarcharAggExp
  operand:
    scalar:
      aggregatedType: Varchar
      aggregationFunctions:
        - name: max
          returnType: Text_1
        - name: min
          returnType: Text_1
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: my_datastore
          dataConnectorScalarType: varchar
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: VarcharAggExp

---
kind: ScalarType
version: v1
definition:
  name: Int4_1
  graphql:
    typeName: Int41

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int4BoolExp_1
  operand:
    scalar:
      type: Int4_1
      comparisonOperators: []
      dataConnectorOperatorMapping:
        - dataConnectorName: my_datastore
          dataConnectorScalarType: int4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Int4BoolExp1

